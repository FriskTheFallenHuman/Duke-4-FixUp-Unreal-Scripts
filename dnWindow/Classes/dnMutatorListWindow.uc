/*******************************************************************************
 * dnMutatorListWindow generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnMutatorListWindow extends UWindowFramedWindow;

var UWindowSmallCloseButton CloseButton;

function Created()
{
    bStatusBar = false;
    bSizable = true;
    super.Created();
    WinWidth = float(Min(400, int(Root.WinWidth - float(50))));
    WinHeight = float(Min(210, int(Root.WinHeight - float(50))));
    WinLeft = (Root.WinWidth / float(2)) - (WinWidth / float(2));
    WinTop = (Root.WinHeight / float(2)) - (WinHeight / float(2));
    CloseButton = UWindowSmallCloseButton(CreateWindow(class'UWindowSmallCloseButton', WinWidth - float(56), WinHeight - float(24), 48, 16));
    MinWinWidth = 200;
    return;
}

function Resized()
{
    super.Resized();
    ClientArea.SetSize(ClientArea.WinWidth, ClientArea.WinHeight - float(24));
    CloseButton.WinLeft = (ClientArea.WinLeft + ClientArea.WinWidth) - float(52);
    CloseButton.WinTop = (ClientArea.WinTop + ClientArea.WinHeight) + float(4);
    return;
}

function Paint(Canvas C, float X, float Y)
{
    local Texture t;

    t = GetLookAndFeelTexture();
    DrawUpBevel(C, ClientArea.WinLeft, ClientArea.WinTop + ClientArea.WinHeight, ClientArea.WinWidth, 24, t);
    super.Paint(C, X, Y);
    return;
}

defaultproperties
{
    ClientClass='dnMutatorListCW'
    WindowTitle="<?int?dnWindow.dnMutatorListWindow.WindowTitle?>"
}