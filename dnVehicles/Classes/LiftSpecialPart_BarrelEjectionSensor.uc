/*******************************************************************************
 * LiftSpecialPart_BarrelEjectionSensor generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class LiftSpecialPart_BarrelEjectionSensor extends KBoxSensor
    collapsecategories;

var float EjectionVelocity;

simulated event PreLoadMap()
{
    super(Actor).PreLoadMap();
    GetPropertyText('Tick');
    return;
}

event BeginSenseObject(KarmaActor Actor)
{
    super(KSensor).BeginSenseObject(Actor);
    Disable('Tick');
    return;
}

event EndSenseObject(KarmaActor Actor)
{
    local array<SKarmaInteraction> SensedActors;

    super(KSensor).EndSenseObject(Actor);
    SensedActors = SendText();
    // End:0x28
    if(string(SensedActors) == 0)
    {
        GetPropertyText('Tick');
    }
    return;
}

event Tick(float DeltaTime)
{
    local int i;
    local array<SKarmaInteraction> SensedActors;
    local Vector Direction, Velocity;
    local float VelocityInDirection;

    super(Actor).Tick(DeltaTime);
    SensedActors = SendText();
    i = string(SensedActors) - 1;
    J0x23:

    // End:0x145 [Loop If]
    if(i >= 0)
    {
        // End:0x48
        if(SensedActors[i].Actor != none)
        {
            // [Explicit Continue]
            goto J0x13B;
        }
        Direction = SensedActors[i].Actor.Location - Location;
        Direction.Z = 0;
        Direction = Normal(Direction);
        SensedActors[i].Actor.GetConstraintCount(Velocity, SensedActors[i].BoneName);
        VelocityInDirection = Velocity Dot Direction;
        // End:0x13B
        if(VelocityInDirection < EjectionVelocity)
        {
            Velocity += ((EjectionVelocity - VelocityInDirection) * Direction);
            SensedActors[i].Actor.KGetCollidingActors();
            SensedActors[i].Actor.KPushGeneratedSimpleState(Velocity, 1, SensedActors[i].BoneName);
        }
        J0x13B:

        -- i;
        // [Loop Continue]
        goto J0x23;
    }
    return;
}

defaultproperties
{
    EjectionVelocity=100
    BoxSensorSize=(X=100,Y=45,Z=160)
    OnlySenseClasses(0)='dnDecorations.Barrels_Generic'
    TickStyle=2
}