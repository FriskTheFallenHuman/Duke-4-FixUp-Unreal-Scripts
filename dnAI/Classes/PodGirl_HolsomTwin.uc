/*******************************************************************************
 * PodGirl_HolsomTwin generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class PodGirl_HolsomTwin extends AIActor
    config
    collapsecategories;

var() noexport deprecated name ForceExplodeTag "Trigger this to force podgirl to explode";
var() noexport int SpawnCount "Number of Octababies to spawn.";
var() noexport deprecated name SpawnActorEvent "Event to give spawned Octababies.";
var Vector SpawnOffset;
var Vector SpawnedVelocity;
var float SpawnYawVar;
var float SpawnPitchVar;
var float SpawnVelVar;
var int ExplodingState;

event BaseChange()
{
    return;
}

function PostVerifySelf()
{
    super.PostVerifySelf();
    GetPointRegion('ForceExplode', ForceExplodeTag);
    return;
}

final simulated function TriggerFunc_ForceExplode()
{
    // End:0x18
    if(PlayAnim('Anim_Explode',,, true))
    {
        ExplodingState = 1;
    }
    TraceFire(4.1, false, 'ExplodeFailsafe');
    return;
}

final simulated function AnimEnd_Exploded()
{
    local int i;
    local Octababy Baby;
    local Vector SpawnLoc, NewVelocity;
    local Rotator VelRotation;
    local dnFriendFX_Spawners Spawner;
    local PodGirl_HolsomTwin OtherTwin;

    FindAndPlaySound('Spawn');
    FindAndPlaySound('Explode');
    ExplodingState = 2;
    PerformDamageCategoryEffectEx('ExplodeFailsafe');
    // End:0x46
    foreach RotateVectorAroundAxis(class'PodGirl_HolsomTwin', OtherTwin)
    {
        // End:0x45
        if(OtherTwin == self)
        {
            // End:0x46
            break;
        }        
    }    
    // End:0xAC
    if(OtherTwin == none)
    {
        // End:0xAC
        if((OtherTwin.ExplodingState == 0) || (OtherTwin.ExplodingState == 1) && ! OtherTwin.IsPlayingOnChannel('Anim_Explode', 0))
        {
            OtherTwin.super(PodGirl_HolsomTwin).AnimEnd_Exploded();
        }
    }
    SpawnLoc = Location + TransformVectorByRot(SpawnOffset, Rotation);
    i = 0;
    J0xCD:

    // End:0x1E3 [Loop If]
    if(i < SpawnCount)
    {
        VelRotation = Rotation;
        VelRotation.Yaw += int((FRand() - 0.5) * SpawnYawVar);
        VelRotation.Pitch += int(FRand() * SpawnPitchVar);
        NewVelocity = TransformVectorByRot(SpawnedVelocity + ((FRand() * SpawnVelVar) * SpawnedVelocity), VelRotation);
        Baby = EmptyTouchClasses(class'Octababy', self,, SpawnLoc, Rotation, false, true);
        // End:0x1D9
        if(Baby == none)
        {
            Baby.Event = SpawnActorEvent;
            Baby.CanUseState_JumpAttackPresetInstant(NewVelocity);
            Baby.DisableDesiredRotation_Roll(Rotator(NewVelocity));
            Baby.ExecuteOp(89);
            Baby.SetExecutive(2);
            Baby.SuspendWeaponTargetEvaluation(false);
        }
        ++ i;
        // [Loop Continue]
        goto J0xCD;
    }
    Spawner = FindFriendSpawner(class'Blood_BodyExplode_Spawner');
    // End:0x247
    if(Spawner == none)
    {
        Spawner.SetDesiredRotation(Location);
        Spawner.DisableDesiredRotation_Roll(Rotation);
        Spawner.RemoteRole = ROLE_None;
        Spawner.ExecuteEffect(true);
    }
    DiedActivity();
    return;
}

function ExplodeFailsafe()
{
    // End:0x12
    if(ExplodingState < 2)
    {
        AnimEnd_Exploded();
    }
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    super(Pawn).RegisterPrecacheComponents(PrecacheIndex);
    PrecacheIndex.RegisterMaterialClass(class'Octababy');
    PrecacheIndex.RegisterMaterialClass(class'Blood_BodyExplode_Spawner');
    PrecacheIndex.SetChannelGridState('Anim_Idle', class'acPodGirl_HolsomTwin', Mesh);
    PrecacheIndex.SetChannelGridState('Anim_Explode', class'acPodGirl_HolsomTwin', Mesh);
    PrecacheIndex.InitAnimationControllerEx(VoicePack, 'Explode');
    PrecacheIndex.InitAnimationControllerEx(VoicePack, 'Spawn');
    return;
}

event EnumerateUsableAnimationControllers(PrecacheIndex PrecacheIndex, out array<Engine.BaseAI.EAIAnimController> UsableControllers)
{
    UsableControllers[string(UsableControllers)] = 1;
    return;
}

defaultproperties
{
    SpawnCount=4
    SpawnOffset=(X=0,Y=0,Z=40)
    SpawnedVelocity=(X=150,Y=0,Z=60)
    SpawnYawVar=16384
    SpawnPitchVar=3730.66
    SpawnVelVar=1
    Nodes(0)=(Ident=Root,Status=0,ReportedInvalid=false,SucCond=1,SucFunc=None,FailCond=1,FailFunc=None,Op=0,OpRef=0,SharedTransitions=none,StateTable=none,CurStateIndex=0)
    Nodes(1)=(Ident=Default,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=85,OpRef=0,SharedTransitions=none,StateTable=none,CurStateIndex=0)
    Nodes(2)=(Ident=FUBAR,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=1,OpRef=0,SharedTransitions=none,StateTable=none,CurStateIndex=0)
    Nodes(3)=(Ident=idle,Status=0,ReportedInvalid=false,SucCond=0,SucFunc=None,FailCond=0,FailFunc=None,Op=85,OpRef=0,SharedTransitions=none,StateTable=none,CurStateIndex=0)
    FSMStates(0)=(FSM=Root,Ident=Default,FSMSucc=false,FSMFail=false,Transitions=((Ident=idle,Cond=0,Func=None,Win=0,Code=0,StateTableIndex=0)),NodeIndex=0)
    FSMStates(1)=(FSM=Root,Ident=idle,FSMSucc=false,FSMFail=false,Transitions=((Ident=idle,Cond=0,Func=None,Win=1,Code=0,StateTableIndex=0)),NodeIndex=0)
    HasWeaponTargetEvaluator=false
    Relationships(0)=(m_aClass='Engine.AIFactionHoloduke',m_eAttitude=5,m_fDamageThreshold=1)
    Relationships(1)=(m_aClass='Engine.AIFactionDuke',m_eAttitude=5,m_fDamageThreshold=1)
    Relationships(2)=(m_aClass='Engine.AIFactionHuman',m_eAttitude=5,m_fDamageThreshold=1)
    Relationships(3)=(m_aClass='Engine.AIFactionAlien',m_eAttitude=5,m_fDamageThreshold=1)
    bUseAnimDispSpeed=false
    bUseAnimDispDir=false
    AlignYaw=false
    AnimControllers[0]=(m_eFallback=0,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    AnimControllers[1]=(m_eFallback=1,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    AnimControllers[2]=(m_eFallback=1,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    AnimControllers[3]=(m_eFallback=1,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    AnimControllers[4]=(m_eFallback=1,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    AnimControllers[5]=(m_eFallback=1,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    AnimControllers[6]=(m_eFallback=1,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    AnimControllers[7]=(m_eFallback=1,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    AnimControllers[8]=(m_eFallback=1,m_cClass='acPodGirl_HolsomTwin',m_oController=none)
    ShowPain=false
    OptionalPathClass='Octababy'
    bInstaGib=true
    NoDecorationPain=false
    bShrinkable=false
    bPerformLipSync=true
    FootstepCategory=8
    Faction='Engine.AIFactionHuman'
    BodyBone=Spine1
    LockOnBone=Spine1
    CorpseType='PodGirl_Corpse'
    ExpandingBoneName=neck
    bCanShowSelf=false
    ExitWoundInfo(0)=(DamageType=none,MinimumDamage=1,RandomChance=0.5,ExitWoundDecalClass='dnGame.dnExitWound_Human')
    Health=25
    HealthCap=25
    Physics=0
    CollisionRadius=35
    Mesh='c_characters.Podgirl_D'
    VoicePack='SoundConfig.NPCs.VoicePack_PodGirl'
}