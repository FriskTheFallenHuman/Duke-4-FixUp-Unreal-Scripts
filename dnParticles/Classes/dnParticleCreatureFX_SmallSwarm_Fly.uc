/*******************************************************************************
 * dnParticleCreatureFX_SmallSwarm_Fly generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnParticleCreatureFX_SmallSwarm_Fly extends dnParticleCreatureFX
    collapsecategories
    hidecategories(Filter,HeatVision,Interactivity,KarmaObject,KarmaOverride,Networking);

var transient float fNextDropTime;
var transient bool bDying;
var transient bool bDead;
var(SwarmDeath) noexport Sound ParticleDeathSound[4] "Sounds to play when a fly dies.";
var(SwarmDeath) noexport float ParticleDeathSoundVolume "Volume to play death sounds at.";
var(SwarmDeath) noexport float ParticleDeathSoundChance "Chance that a sound will play when a fly dies.  Range 0.0 - 1.0.";

function PostBeginPlay()
{
    GetPropertyText('Tick');
    super(InteractiveActor).PostBeginPlay();
    return;
}

simulated function Tick(float fDeltaTime)
{
    local int i, n;
    local Particle P;

    super(Actor).Tick(fDeltaTime);
    // End:0x28
    if(! bDying)
    {
        bNoNativeTick = true;
        GetPropertyText('Tick');
        return;
    }
    // End:0x43
    if(Level.GameTimeSeconds < fNextDropTime)
    {
        return;
    }
    // End:0x61
    if(bDead)
    {
        GetPropertyText('Tick');
        bNoNativeTick = true;
        RemoveTouchClass();
        return;
    }
    // End:0x169
    if(ParticleHurtRadius(nMinFlockNumber, P) == true)
    {
        P.Velocity.X = 0;
        P.Velocity.Y = 0;
        P.Velocity.Z = 0;
        P.Acceleration = PhysicsVolume.Gravity;
        P.Acceleration.Z += ((FRand() * 300) + float(450));
        DoPrimeSpawn(nMinFlockNumber, P);
        SoundVolume = byte(float(255) * (1 - (float(nMinFlockNumber) / float(HighestParticleNumber))));
        n = int(FRand() * 100) / 25;
        // End:0x169
        if((ParticleDeathSound[n] == none) && FRand() < ParticleDeathSoundChance)
        {
            HasAnim(1, ParticleDeathSound[n], 1,,,, ParticleDeathSoundVolume);
        }
    }
    ++ nMinFlockNumber;
    // End:0x21F
    if(nMinFlockNumber >= HighestParticleNumber)
    {
        AlphaStart = 1;
        AlphaEnd = 0;
        bUseAlphaRamp = false;
        SoundVolume = 0;
        i = 0;
        J0x1AC:

        // End:0x1F8 [Loop If]
        if(i < HighestParticleNumber)
        {
            // End:0x1EE
            if(ParticleHurtRadius(i, P) == true)
            {
                P.Lifetime = 3;
                P.RemainingLifetime = 3;
            }
            ++ i;
            // [Loop Continue]
            goto J0x1AC;
        }
        bDead = true;
        fNextDropTime = 3.1 + Level.GameTimeSeconds;        
    }
    else
    {
        fNextDropTime = ((FRand() * 0.2) + 0.05) + Level.GameTimeSeconds;
    }
    return;
}

simulated function KillSwarm()
{
    // End:0x0E
    if(bDead == true)
    {
        return;
    }
    UseZoneGravity = true;
    ParticlesCollideWithWorld = true;
    Disable('Tick');
    bNoNativeTick = false;
    nMinFlockNumber = 0;
    fNextDropTime = Level.GameTimeSeconds;
    bDying = true;
    bDead = false;
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    local int i;

    super(InteractiveActor).RegisterPrecacheComponents(PrecacheIndex);
    i = 0;
    J0x12:

    // End:0x40 [Loop If]
    if(i < 4)
    {
        PrecacheIndex.LogWarning(ParticleDeathSound[i]);
        ++ i;
        // [Loop Continue]
        goto J0x12;
    }
    return;
}

defaultproperties
{
    ParticleDeathSound[0]='a_ambient.Insects.FlyDie01'
    ParticleDeathSound[1]='a_ambient.Insects.FlyDie01'
    ParticleDeathSound[2]='a_ambient.Insects.FlyDie01'
    ParticleDeathSound[3]='a_ambient.Insects.FlyDie01'
    ParticleDeathSoundVolume=0.75
    ParticleDeathSoundChance=0.3
    Enabled=false
    bBoundParticles=true
    RelativeLocation=true
    UseZoneGravity=false
    PrimeCount=32
    PrimeTimeIncrement=0
    SpawnNumber=0
    SpawnPeriod=0
    MaximumParticles=32
    Lifetime=0
    InitialVelocity=(X=0,Y=0,Z=0)
    MaxVelocityVariance=(X=0,Y=0,Z=0)
    BounceElasticity=0
    FlockToCenterVelocity=49
    FlockCenterWeight=32
    Textures(0)='dt_effects.Creatures.genfly1aRC'
    StartDrawScale=0.0025
    EndDrawScale=0.0025
    DrawScaleVariance=0.00375
    RotationVariance=2
    ParticleAmbientLight=(R=32,G=32,B=32,A=255)
    bUnlit=false
    bCollideActors=true
    CollisionRadius=16
    CollisionHeight=16
    Style=2
    SoundVolume=48
    SoundRadius=256
    SoundInnerRadius=128
    AmbientSound='a_ambient.Insects.Flies01'
}