/*******************************************************************************
 * SteamCollisionActor generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class SteamCollisionActor extends ParticleCollisionActor
    transient
    collapsecategories;

var float StartColHeight;
var float EndColHeight;
var float StartColRadius;
var float EndColRadius;
var float DamagePerTouch;

event Locked()
{
    super.Locked();
    ForceMountUpdate(true, false, false);
    return;
}

event Unlocked()
{
    super.Unlocked();
    ForceMountUpdate(false, false, false);
    IsMountedTo(StartColRadius, StartColHeight);
    return;
}

event Update()
{
    local float ColHeight, ColRadius, Alpha;

    super.Update();
    Alpha = pLifetimeRemaining / pLifetime;
    ColHeight = Lerp(Alpha, EndColHeight, StartColHeight);
    ColRadius = Lerp(Alpha, EndColRadius, StartColRadius);
    IsMountedTo(ColRadius, ColHeight);
    return;
}

event Touch(Actor Other)
{
    super(Actor).Touch(Other);
    // End:0x25
    if(string(Touching) == 1)
    {
        TraceFire(0.5, true, 'ApplySteamDamage');
    }
    return;
}

final simulated function ApplySteamDamage()
{
    local int i;

    // End:0x16
    if(string(Touching) == 0)
    {
        PerformDamageCategoryEffectEx('ApplySteamDamage');
        return;
    }
    i = string(Touching) - 1;
    J0x25:

    // End:0xA1 [Loop If]
    if(i >= 0)
    {
        // End:0x97
        if(CollisionInstigator == Touching[i])
        {
            Touching[i].TakeDamage(CollisionInstigator, DamagePerTouch, Touching[i].Location, Vect(0, 0, 0), class'SteamDamage',, Location);
        }
        -- i;
        // [Loop Continue]
        goto J0x25;
    }
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    super(InteractiveActor).RegisterPrecacheComponents(PrecacheIndex);
    PrecacheIndex.ResetServer(class'SteamDamage');
    return;
}

defaultproperties
{
    StartColHeight=5
    EndColHeight=30
    StartColRadius=5
    EndColRadius=30
    DamagePerTouch=2
}