/*******************************************************************************
 * dnControlHelper_Pinball_SlotSet generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControlHelper_Pinball_SlotSet extends dnControlHelper_Pinball
    collapsecategories
    dependson(dnControlHelper_Pinball_Slot);

var array<dnControlHelper_Pinball_Slot> Slots;

simulated function SpawnSlots(Vector Slot1, Vector Slot2, Vector Slot3)
{
    Slots[Slots.Add(1)] = EmptyTouchClasses(class'dnControlHelper_Pinball_Slot', self,, Owner.Location + (Slot1 >> Owner.Rotation), Owner.Rotation);
    Slots[0].OwnerMachine = OwnerMachine;
    Slots[Slots.Add(1)] = EmptyTouchClasses(class'dnControlHelper_Pinball_Slot', self,, Owner.Location + (Slot2 >> Owner.Rotation), Owner.Rotation);
    Slots[1].OwnerMachine = OwnerMachine;
    Slots[Slots.Add(1)] = EmptyTouchClasses(class'dnControlHelper_Pinball_Slot', self,, Owner.Location + (Slot3 >> Owner.Rotation), Owner.Rotation);
    Slots[2].OwnerMachine = OwnerMachine;
    return;
}

simulated function Reset()
{
    local int i;

    i = 0;
    J0x07:

    // End:0x37 [Loop If]
    if(i < string(Slots))
    {
        Slots[i].Deactivate();
        ++ i;
        // [Loop Continue]
        goto J0x07;
    }
    return;
}

function Destroyed()
{
    local int i;

    J0x00:
    // End:0x2D [Loop If]
    if(i < string(Slots))
    {
        Slots[i].RemoveTouchClass();
        ++ i;
        // [Loop Continue]
        goto J0x00;
    }
    super(dnDecoration).Destroyed();
    return;
}

simulated function HitSlot(dnControlHelper_Pinball_Slot Slot)
{
    local int i;

    i = 0;
    J0x07:

    // End:0x3E [Loop If]
    if(i < string(Slots))
    {
        // End:0x34
        if(! Slots[i].bActivated)
        {
            return;
        }
        ++ i;
        // [Loop Continue]
        goto J0x07;
    }
    Reset();
    OwnerMachine.AwardPoints(PointsAwarded);
    dnControl_Pinball(Owner).SlotSetComplete(self);
    return;
}

function RotateLeft()
{
    local bool bFirstOn;
    local int i;

    bFirstOn = Slots[0].bActivated;
    i = 0;
    J0x20:

    // End:0x88 [Loop If]
    if(i < (string(Slots) - 1))
    {
        // End:0x68
        if(Slots[i + 1].bActivated)
        {
            Slots[i].Activate();
            // [Explicit Continue]
            goto J0x7E;
        }
        Slots[i].Deactivate();
        J0x7E:

        ++ i;
        // [Loop Continue]
        goto J0x20;
    }
    // End:0xAE
    if(bFirstOn)
    {
        Slots[string(Slots) - 1].Activate();        
    }
    else
    {
        Slots[string(Slots) - 1].Deactivate();
    }
    return;
}

function RotateRight()
{
    local bool bLastOn;
    local int i;

    bLastOn = Slots[string(Slots) - 1].bActivated;
    i = string(Slots) - 1;
    J0x30:

    // End:0x90 [Loop If]
    if(i > 0)
    {
        // End:0x70
        if(Slots[i - 1].bActivated)
        {
            Slots[i].Activate();
            // [Explicit Continue]
            goto J0x86;
        }
        Slots[i].Deactivate();
        J0x86:

        -- i;
        // [Loop Continue]
        goto J0x30;
    }
    // End:0xAE
    if(bLastOn)
    {
        Slots[0].Activate();        
    }
    else
    {
        Slots[0].Deactivate();
    }
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    super.RegisterPrecacheComponents(PrecacheIndex);
    PrecacheIndex.RegisterMaterialClass(class'dnControlHelper_Pinball_Slot');
    return;
}

defaultproperties
{
    PointsAwarded=7500
    bHidden=true
    DrawType=1
}