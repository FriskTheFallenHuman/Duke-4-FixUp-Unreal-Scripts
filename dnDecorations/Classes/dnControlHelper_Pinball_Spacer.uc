/*******************************************************************************
 * dnControlHelper_Pinball_Spacer generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControlHelper_Pinball_Spacer extends dnControlHelper_Pinball
    collapsecategories;

var() float ValidOffset;
var() float BounceImpulse;
var() dnControlHelper_Pinball_Light FlashingLights[2];

simulated function bool AllowKImpact(dnControlHelper_Pinball_Ball Ball)
{
    return super.AllowKImpact(Ball) && Abs((Ball.Location - Location) Dot Vector(Rotation)) <= ((DrawScale * DrawScale3D.X) * ValidOffset);
    return;
}

simulated function KImpactInternal(dnControlHelper_Pinball_Ball Ball)
{
    local Vector ToBall, Impulse;
    local float DotVal;
    local int i;

    super.KImpactInternal(Ball);
    ToBall = Ball.Location - Location;
    ToBall.Z = 0;
    ToBall = Normal(ToBall);
    Impulse = Vect(0, 1, 0) >> Rotation;
    DotVal = ToBall Dot Impulse;
    // End:0x92
    if(DotVal > 0)
    {
        Impulse *= BounceImpulse;        
    }
    else
    {
        Impulse *= - BounceImpulse;
    }
    Ball.Bounce(self, Impulse);
    OwnerMachine.AwardPoints(PointsAwarded);
    i = 0;
    J0xD2:

    // End:0x110 [Loop If]
    if(i < 2)
    {
        // End:0x106
        if(FlashingLights[i] == none)
        {
            FlashingLights[i].Activate();
        }
        ++ i;
        // [Loop Continue]
        goto J0xD2;
    }
    FindAndPlaySound('Pinball_Jetpack');
    TraceFire(0.5, false, 'TurnOffLights');
    return;
}

simulated function TurnOffLights()
{
    local int i;

    i = 0;
    J0x07:

    // End:0x45 [Loop If]
    if(i < 2)
    {
        // End:0x3B
        if(FlashingLights[i] == none)
        {
            FlashingLights[i].Deactivate();
        }
        ++ i;
        // [Loop Continue]
        goto J0x07;
    }
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    super.RegisterPrecacheComponents(PrecacheIndex);
    PrecacheIndex.InitAnimationControllerEx(VoicePack, 'Pinball_Jetpack');
    return;
}

defaultproperties
{
    ValidOffset=2.5
    BounceImpulse=160
    KImpactNoiseName=Pinball_Spacer
    PointsAwarded=500
    HealthPrefab=0
    bBlockKarma=true
    bTickOnlyRecent=false
    CollisionRadius=0
    CollisionHeight=0
    DrawType=8
    StaticMesh='sm_class_decorations.Arcades.Pinball_Spacer'
}