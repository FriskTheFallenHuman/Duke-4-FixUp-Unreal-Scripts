/*******************************************************************************
 * Biology_Generic_WallBoobs generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Biology_Generic_WallBoobs extends Biology_Generic
    collapsecategories;

var() float InflateScale1;
var() float InflateScale2;
var() float InflateScale3;
var() SoftParticleSystem Milk1;
var() SoftParticleSystem Milk2;
var() SoftParticleSystem Milk3;
var class<dnScreenSplatters> ScreenSplatterClass;

function PostVerifySelf()
{
    SpawnMountedParticleSystems();
    super(dnDecoration).PostVerifySelf();
    DecoActivity(0, 'idle');
    // End:0x75
    if(! IsMP())
    {
        Milk1 = SoftParticleSystem(FindMountedActor('Milk1', class'SoftParticleSystem'));
        Milk2 = SoftParticleSystem(FindMountedActor('Milk2', class'SoftParticleSystem'));
        Milk3 = SoftParticleSystem(FindMountedActor('Milk3', class'SoftParticleSystem'));
    }
    return;
}

function SpawnMountedParticleSystems()
{
    local int Index, i;

    // End:0x0B
    if(IsMP())
    {
        return;
    }
    Index = MountOnSpawn.Add(1);
    MountOnSpawn[Index].SpawnClass = class'Boobies_Milk_Main';
    MountOnSpawn[Index].MountPrefab.MountType = 2;
    MountOnSpawn[Index].MountPrefab.MountAngles = Rot(0, 0, 0);
    MountOnSpawn[Index].MountPrefab.MountMeshItem = 'mount_nipple_1';
    MountOnSpawn[Index].MountPrefab.ForceTag = CompositeNames("Milk1");
    Index = MountOnSpawn.Add(1);
    MountOnSpawn[Index].SpawnClass = class'Boobies_Milk_Main';
    MountOnSpawn[Index].MountPrefab.MountType = 2;
    MountOnSpawn[Index].MountPrefab.MountAngles = Rot(0, 0, 0);
    MountOnSpawn[Index].MountPrefab.MountMeshItem = 'mount_nipple_2';
    MountOnSpawn[Index].MountPrefab.ForceTag = CompositeNames("Milk2");
    Index = MountOnSpawn.Add(1);
    MountOnSpawn[Index].SpawnClass = class'Boobies_Milk_Main';
    MountOnSpawn[Index].MountPrefab.MountType = 2;
    MountOnSpawn[Index].MountPrefab.MountAngles = Rot(0, 0, 0);
    MountOnSpawn[Index].MountPrefab.MountMeshItem = 'mount_nipple_3';
    MountOnSpawn[Index].MountPrefab.ForceTag = CompositeNames("Milk3");
    return;
}

simulated event bool OnEvalBonesHelper()
{
    MeshInstance.AnimUpdateGrid('inflate_1', Vect(InflateScale1, InflateScale1, InflateScale1), true);
    MeshInstance.AnimUpdateGrid('inflate_2', Vect(InflateScale2, InflateScale2, InflateScale2), true);
    MeshInstance.AnimUpdateGrid('inflate_3', Vect(InflateScale3, InflateScale3, InflateScale3), true);
    return true;
    return;
}

event Used(Actor Other, Pawn EventInstigator)
{
    super(dnDecoration).Used(Other, EventInstigator);
    // End:0x2C
    if(NameForString(EventInstigator.LastQuickAction, 'None'))
    {
        return;
    }
    // End:0x5F
    if(EventInstigator.bIsPlayerPawn)
    {
        Instigator = EventInstigator;
        EventInstigator.FindSoundAndSpeak('GotWallBoobs');
    }
    // End:0x91
    if(FRand() < 0.5)
    {
        EventInstigator.HandQuickAction('HandQuickAction_SlapWallBoobs_Right');
        Destroy(0.25, false, 'HitRight');        
    }
    else
    {
        EventInstigator.HandQuickAction('HandQuickAction_SlapWallBoobs_Left');
        Destroy(0.25, false, 'HitLeft');
    }
    Destroy(0.25, false, 'Slapped');
    return;
}

final function HitCommon()
{
    FindAndPlaySound('WallBoob_Impacts');
    MilkEffects();
    return;
}

final function HitLeft()
{
    DecoActivity(0, 'DamageLeft');
    HitCommon();
    return;
}

final function HitRight()
{
    DecoActivity(0, 'DamageRight');
    HitCommon();
    return;
}

final function MilkEffects()
{
    local dnScreenSplatters ScreenSplatter;

    // End:0x85
    if(! IsMP())
    {
        Milk1.Trigger(self, none);
        Milk2.Trigger(self, none);
        Milk3.Trigger(self, none);
        ScreenSplatter = dnScreenSplatters(FindStaticActor(ScreenSplatterClass));
        // End:0x85
        if(ScreenSplatter == none)
        {
            ScreenSplatter.SetDesiredRotation(Location);
            ScreenSplatter.ExecuteEffect();
        }
    }
    return;
}

final function Slapped()
{
    // End:0x28
    if(DukePlayer(Instigator) == none)
    {
        DukePlayer(Instigator).GivePermanentEgoCapAward(20);
    }
    return;
}

event TakeDamage(Pawn DamageInstigator, float Damage, Vector DamageOrigin, Vector DamageDirection, class<DamageType> DamageType, optional name HitBoneName, optional Vector DamageStart)
{
    local Vector X, Y, Z;
    local float Dir;

    // End:0x1E
    if(DamageInstigator.bIsPlayerPawn)
    {
        Instigator = DamageInstigator;
    }
    super(dnDecoration).TakeDamage(DamageInstigator, Damage, DamageOrigin, DamageDirection, DamageType, HitBoneName, DamageStart);
    GetAxes(Rotation, X, Y, Z);
    Dir = Y Dot DamageDirection;
    // End:0x88
    if(Dir < 0)
    {
        HitLeft();        
    }
    else
    {
        HitRight();
    }
    MilkEffects();
    return;
}

simulated event AnimEndEx(SAnimEndInfo AnimEndInfo)
{
    super(dnDecoration).AnimEndEx(AnimEndInfo);
    // End:0x44
    if((AnimEndInfo.AnimName != 'hit_right') || AnimEndInfo.AnimName != 'hit_left')
    {
        DecoActivity(0, 'idle');
    }
    return;
}

simulated event bool ShouldPlayDamageSound(class<DamageType> DamageType)
{
    // End:0x12
    if(IsA(DamageType, class'MeleeDamage'))
    {
        return false;
    }
    return super(Actor).ShouldPlayDamageSound(DamageType);
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    super(dnDecoration).RegisterPrecacheComponents(PrecacheIndex);
    // End:0x44
    if(! PrecacheIndex.bIsMP)
    {
        PrecacheIndex.RegisterMaterialClass(class'Boobies_Milk_Main');
        PrecacheIndex.RegisterMaterialClass(ScreenSplatterClass);
    }
    // End:0x92
    if(bUsable)
    {
        PrecacheIndex.InitAnimationControllerEx(class'DukePlayer'.default.VoicePack, 'GotWallBoobs');
        PrecacheIndex.SetAnimPairState('HandQuickAction_SlapWallBoobs_Right');
        PrecacheIndex.SetAnimPairState('HandQuickAction_SlapWallBoobs_Left');
    }
    PrecacheIndex.InitAnimationControllerEx(VoicePack, 'WallBoob_Impacts');
    return;
}

defaultproperties
{
    InflateScale1=1
    InflateScale2=1
    InflateScale3=1
    ScreenSplatterClass='dnScreenSplatter_Pumpkin'
    DecoActivities_Default(0)=(ActivityData=(bInitialized=false,CurrentIndex=0,NextPerformTime=0,NextPerformTime_Failure=0),ActivityIDScript=(idle),ActivityID=none,ActivityMethod=0,ActivityStates_Success=none,ActivityStates_Failure=none,ActivityDebugID="",Activities=((ActivityRules=none,ActivityElements=(DecoActivities_Animation'Biology_Generic_WallBoobs.DA_Anim_WallBoobs_Idle'),ActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0),FailureActivityElements=none,FailureActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0))),bDisabled=false)
    DecoActivities_Default(1)=(ActivityData=(bInitialized=false,CurrentIndex=0,NextPerformTime=0,NextPerformTime_Failure=0),ActivityIDScript=(DamageRight),ActivityID=none,ActivityMethod=0,ActivityStates_Success=none,ActivityStates_Failure=none,ActivityDebugID="",Activities=((ActivityRules=none,ActivityElements=(DecoActivities_Animation'Biology_Generic_WallBoobs.DA_Anim_WallBoobs_DamageRight'),ActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0),FailureActivityElements=none,FailureActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0))),bDisabled=false)
    DecoActivities_Default(2)=(ActivityData=(bInitialized=false,CurrentIndex=0,NextPerformTime=0,NextPerformTime_Failure=0),ActivityIDScript=(DamageLeft),ActivityID=none,ActivityMethod=0,ActivityStates_Success=none,ActivityStates_Failure=none,ActivityDebugID="",Activities=((ActivityRules=none,ActivityElements=(DecoActivities_Animation'Biology_Generic_WallBoobs.DA_Anim_WallBoobs_DamageLeft'),ActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0),FailureActivityElements=none,FailureActivitySetup=(bDisabled=false,bPerformedThisRound=false,PerformedCounter=0,LoopCount=0,PerformAgainDelay=0))),bDisabled=false)
    bUsable=true
    UsePhrase="<?int?dnDecorations.Biology_Generic_WallBoobs.UsePhrase?>"
    bCollisionAssumeValid=false
    bAITransparent=true
    bBlockActors=false
    bHasEvalBonesHelper=true
    bNoDelete=true
    bNoNativeTick=false
    bDumbMesh=false
    DrawType=2
    Mesh='c_generic.alien_wall_boobs'
    RemoteRole=0
}