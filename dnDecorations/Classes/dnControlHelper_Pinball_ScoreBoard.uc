/*******************************************************************************
 * dnControlHelper_Pinball_ScoreBoard generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class dnControlHelper_Pinball_ScoreBoard extends dnControlHelper_Pinball;

var() noexport float UpdateTime "How often to update marqee in seconds";
var array<MaterialEx> NumberMaterials;

function UpdateJackpot()
{
    local int i, mod;

    i = 0;
    mod = 10;
    // End:0x45
    if(OwnerMachine.Score > 99999999)
    {
        OwnerMachine.Score = 99999999;
        PerformDamageCategoryEffectEx('UpdateJackpot');
    }
    J0x45:

    // End:0xE3 [Loop If]
    if(i < 8)
    {
        // End:0xA4
        if((OwnerMachine.Score * 10) > mod)
        {
            VisibleActors(7 - i, NumberMaterials[(OwnerMachine.Score % mod) / (mod / 10)]);            
        }
        else
        {
            J0xA4:

            // End:0xCD [Loop If]
            if(i < 8)
            {
                VisibleActors(7 - i, NumberMaterials[0]);
                ++ i;
                // [Loop Continue]
                goto J0xA4;
            }
            return;
        }
        ++ i;
        mod *= float(10);
        // [Loop Continue]
        goto J0x45;
    }
    return;
}

simulated event PostBeginPlay()
{
    super(dnDecoration).PostBeginPlay();
    return;
}

function DisplayScore(float Score)
{
    local int i, mod;

    i = 0;
    mod = 10;
    J0x0F:

    // End:0x9D [Loop If]
    if(i < 8)
    {
        // End:0x5E
        if((Score * float(10)) > float(mod))
        {
            VisibleActors(7 - i, NumberMaterials[int(Score % float(mod)) / (mod / 10)]);            
        }
        else
        {
            J0x5E:

            // End:0x87 [Loop If]
            if(i < 8)
            {
                VisibleActors(7 - i, NumberMaterials[0]);
                ++ i;
                // [Loop Continue]
                goto J0x5E;
            }
            return;
        }
        ++ i;
        mod *= float(10);
        // [Loop Continue]
        goto J0x0F;
    }
    return;
}

function StartUpdatingScore()
{
    TraceFire(UpdateTime, true, 'UpdateJackpot',,, true);
    return;
}

function StopUpdatingScore()
{
    PerformDamageCategoryEffectEx('UpdateJackpot');
    return;
}

event Destroyed()
{
    super(dnDecoration).Destroyed();
    PerformDamageCategoryEffectEx('UpdateJackpot');
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    local int i;

    super.RegisterPrecacheComponents(PrecacheIndex);
    i = string(NumberMaterials) - 1;
    J0x1A:

    // End:0x47 [Loop If]
    if(i >= 0)
    {
        PrecacheIndex.RegisterAnimationControllerEntry(NumberMaterials[i]);
        -- i;
        // [Loop Continue]
        goto J0x1A;
    }
    return;
}

defaultproperties
{
    UpdateTime=0.0333333
    NumberMaterials(0)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-0_fb'
    NumberMaterials(1)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-1_fb'
    NumberMaterials(2)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-2_fb'
    NumberMaterials(3)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-3_fb'
    NumberMaterials(4)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-4_fb'
    NumberMaterials(5)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-5_fb'
    NumberMaterials(6)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-6_fb'
    NumberMaterials(7)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-7_fb'
    NumberMaterials(8)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-8_fb'
    NumberMaterials(9)='smt_skins8.LK_slotmarquee.SlotMarqueeNum-9_fb'
    HealthPrefab=0
    bBlockKarma=true
    bTickOnlyRecent=false
    bTickOnlyZoneRecent=false
    CollisionRadius=105
    CollisionHeight=34.5
    DrawType=8
    StaticMesh='sm_class_decorations.Arcades.Pinball_Score'
}