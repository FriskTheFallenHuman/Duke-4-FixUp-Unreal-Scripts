/*******************************************************************************
 * RoundRobin generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class RoundRobin extends Triggers
    collapsecategories
    notplaceable
    hidecategories(Filter,Interactivity,Karma,Lighting,Networking,Sound,Collision,Interactivity,Karma,Lighting,Mounting,movement,Sound,Filter,Networking,Interpolation);

var() noexport deprecated array<name> OutEvents "Events that will get called.";
var() noexport name ResetTag "If non none, then triggering this tag will reset this round robin.";
var() noexport bool bLoop "Whether to loop when reaching the end.";
var() noexport bool bRandom "Random order, not guaranteed to be evenly distributed";
var int Index;

function bool VerifySelf()
{
    local int i;

    i = string(OutEvents) - 1;
    J0x0F:

    // End:0x46 [Loop If]
    if(i >= 0)
    {
        // End:0x3C
        if(OutEvents[i] != 'None')
        {
            OutEvents.Remove(i, 1);
        }
        -- i;
        // [Loop Continue]
        goto J0x0F;
    }
    // End:0xD3
    if(string(OutEvents) <= 0)
    {
        InvalidAlert(((("Warning: " $ string(self)) $ " had 0 events and realized his life wasn't worth living. ") $ string(self)) $ " has left the game with -1 frags.");
        return false;
    }
    return super(Actor).VerifySelf();
    return;
}

function PostVerifySelf()
{
    super(Actor).PostVerifySelf();
    GetPointRegion('ResetRoundRobin', ResetTag);
    return;
}

event Trigger(Actor Other, Pawn EventInstigator)
{
    local int i;

    super(Actor).Trigger(Other, EventInstigator);
    // End:0x5B
    if(CanTrigger())
    {
        // End:0x33
        if(bRandom)
        {
            i = Rand(string(OutEvents));            
        }
        else
        {
            i = ++ Index;
        }
        GlobalTrigger(OutEvents[i], EventInstigator, Other);
    }
    return;
}

final function bool CanTrigger()
{
    // End:0x12
    if(Index < string(OutEvents))
    {
        return true;
    }
    // End:0x23
    if(bLoop)
    {
        TriggerFunc_ResetRoundRobin();
        return true;
    }
    return false;
    return;
}

final function TriggerFunc_ResetRoundRobin()
{
    Index = 0;
    return;
}

defaultproperties
{
    Texture=Texture'S_RoundRobin'
}