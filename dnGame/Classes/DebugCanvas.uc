/*******************************************************************************
 * DebugCanvas generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class DebugCanvas extends Object;

cpptext
{
// Stripped
}

struct SLineStruct
{
    var Vector m_vStart;
    var Vector m_vEnd;
    var Color m_Color;
    var float m_fExpireTime;
};

var private float m_fExpireTime;
var array<SLineStruct> m_Lines;

function AddLine(Actor aOwner, Vector vStart, Vector vEnd, Color Color, float fLifeTime)
{
    local int nIndex;

    nIndex = m_Lines.Add(1);
    m_Lines[nIndex].m_vStart = vStart;
    m_Lines[nIndex].m_vEnd = vEnd;
    m_Lines[nIndex].m_Color = Color;
    m_Lines[nIndex].m_fExpireTime = aOwner.Level.TimeSeconds + fLifeTime;
    return;
}

event RenderOverlays(Actor aOwner, Canvas C)
{
    local int i;

    i = 0;
    J0x07:

    // End:0xB3 [Loop If]
    if(i < string(m_Lines))
    {
        // End:0x5B
        if(m_Lines[i].m_fExpireTime <= aOwner.Level.TimeSeconds)
        {
            m_Lines.Remove(i, 1);
            -- i;
            // [Explicit Continue]
            goto J0xA9;
        }
        C.DrawColor = m_Lines[i].m_Color;
        C.DrawScaledIconClipped(m_Lines[i].m_vStart, m_Lines[i].m_vEnd, true);
        J0xA9:

        ++ i;
        // [Loop Continue]
        goto J0x07;
    }
    return;
}
