/*******************************************************************************
 * DukeChangeroomPlayer generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class DukeChangeroomPlayer extends DukeMyDigsPlayer
    config(User)
    collapsecategories;

function PostBeginPlay()
{
    local int FOVvalue;

    super(DukeMultiplayerAssets).PostBeginPlay();
    DefaultFOV = 75;
    DefaultFOVShrunk = 70;
    return;
}

simulated function Restart()
{
    super(DukeMultiPlayer).Restart();
    LoopAnimEx('a_scr_map00_edf_whiteboard_gameplan_idle');
    return;
}

function NotifyAfterLevelChange()
{
    super(PlayerPawn).NotifyAfterLevelChange();
    // End:0x57
    if((Player.Console == none) && ! Player.Console.bShowCustomizationMenu)
    {
        Player.Console.ShowCustomizationMenu();
    }
    return;
}

event bool SetPause(bool bPause, optional string Pauser, optional bool bSkipFade)
{
    return false;
    return;
}

function ParseUnlocks()
{
    local LCDHelper LCD;
    local int NumHatsUnlocked, NumHatsLocked, NumSunglassesUnlocked, NumSunglassesLocked, NumShirtsUnlocked, NumShirtsLocked,
	    numShirtLogosUnlocked, numShirtLogosLocked, NumTitlesUnlocked, NumTitlesLocked;

    LCD = InstallPS3Data();
    // End:0xCB
    if(LCD == none)
    {
        ParseUnlockType(2, NumHatsUnlocked, NumHatsLocked);
        ParseUnlockType(3, NumSunglassesUnlocked, NumSunglassesLocked);
        ParseUnlockType(4, NumShirtsUnlocked, NumShirtsLocked);
        ParseUnlockType(5, numShirtLogosUnlocked, numShirtLogosLocked);
        ParseUnlockType(7, NumTitlesUnlocked, NumTitlesLocked);
        NumShirtsUnlocked = NumShirtsUnlocked + numShirtLogosUnlocked;
        NumShirtsLocked = NumShirtsLocked + numShirtLogosLocked;
        LCD.ChangeRoomSetUnlocks(NumHatsUnlocked, NumHatsLocked, NumSunglassesUnlocked, NumSunglassesLocked, NumShirtsUnlocked, NumShirtsLocked, NumTitlesUnlocked, NumTitlesLocked);
    }
    return;
}

function ParseUnlockType(Engine.Object.EChallengeCustomizeCategory Category, out int NumUnlocked, out int NumLocked)
{
    local array<int> ItemArray;
    local int i;
    local Engine.Object.EChallengeStatus challenge_status;

    PlayerProgress.GetAllChallengeID(ItemArray, Category, false);
    i = 0;
    J0x22:

    // End:0x7C [Loop If]
    if(i < string(ItemArray))
    {
        challenge_status = PlayerProgress.GetChallengeStatus(ItemArray[i]);
        // End:0x6B
        if(int(challenge_status) != int(0))
        {
            ++ NumUnlocked;
            // [Explicit Continue]
            goto J0x72;
        }
        ++ NumLocked;
        J0x72:

        ++ i;
        // [Loop Continue]
        goto J0x22;
    }
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    super(DukeMultiplayerAssets).RegisterPrecacheComponents(PrecacheIndex);
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Sports');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_3D');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Fakenose');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Wrap');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Star');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Shutter');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Hornedm');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Video');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Bug');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Snow');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Aviators');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Hornedf');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Scuba');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Hypno');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Hannibal');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Goggles');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Beaked');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Hearts');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Inuit');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Stock');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Glasses_Tea');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_pith');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_jester');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_cap');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_hoplite');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_military');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_capbw');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_cheese');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_brainslug');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_unclesam');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_beer');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_pickelhaube');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_samurai');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Hats_Pimp');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_trafficcone');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_crown');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_bonsai');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_propellerhat');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_hddress');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_conehead');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_arrow');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_chicken');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_grandpuba');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_chef');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_headphones');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_football');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Dukes_Hats_Viking');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_alien');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_pumpkin');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_fez');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_miner');
    PrecacheIndex.RegisterAnimationControllerEntry(class'dukes_hats_none');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Duke_Shirt_Icon_01');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Duke_Shirt_Icon_02');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Duke_Shirt_Icon_03');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Duke_Shirt_Icon_04');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Duke_Shirt_Icon_05');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Duke_Shirt_Icon_06');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Duke_Shirt_Icon_07');
    PrecacheIndex.RegisterAnimationControllerEntry(class'Duke_Shirt_Icon_08');
    PrecacheIndex.RegisterAnimationControllerEntry(class'LockIcon');
    PrecacheIndex.RegisterAnimationControllerEntry(class'color_select');
    PrecacheIndex.SetChannelEventState(Mesh, 'a_scr_map00_edf_whiteboard_gameplan_idle');
    return;
}

defaultproperties
{
    bCanMove=false
}