/*******************************************************************************
 * HoloDukeDisc generated by Eliot.UELib using UE Explorer.exe.
 * Eliot.UELib ? 2009-2022 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class HoloDukeDisc extends RenderActor;

var Pawn HDInstigator;
var float PhysicsTotalTime;
var float PhysicsTime;
var Vector StartVel;
var Vector StartLoc;
var Vector TargetLoc;
var Vector SpawnLoc;
var class<Actor> HDClass;
var float SpawnHeight;

event Tick(float DeltaSeconds)
{
    local Vector EndVel;

    super(Actor).Tick(DeltaSeconds);
    PhysicsTime += DeltaSeconds;
    // End:0x65
    if(PhysicsTime < PhysicsTotalTime)
    {
        EndVel = StartVel + (PhysicsTime * CreateDesiredLocation());
        SetDesiredRotation(StartLoc + ((PhysicsTime * 0.5) * (StartVel + EndVel)), true);        
    }
    else
    {
        FindAndPlaySound('HoloDuke_Land');
        SetDesiredRotation(TargetLoc, true);
        TraceFire(0.5, false, 'SpawnHoloDuke');
        TickStyle = 0;
    }
    return;
}

final function SpawnHoloDuke()
{
    local DukePlayer Duke;
    local Vector SpawnLocation;

    // End:0x2FA
    if((((HDClass == none) && HDClass == none) && HDInstigator == none) && HDInstigator.ActiveHoloDuke != self)
    {
        SpawnLocation = Location + Vect(0, 0, (HDClass.default.CollisionHeight + SpawnHeight) * DrawScale);
        // End:0x1CE
        if(IsMP())
        {
            // End:0xB7
            if(DrawScale < default.DrawScale)
            {
                HDInstigator.ActiveHoloDuke = EmptyTouchClasses(HDClass, none,, SpawnLocation, Rotation,, true);                
            }
            else
            {
                HDInstigator.ActiveHoloDuke = EmptyTouchClasses(HDClass, none,, SpawnLocation, Rotation);
                // End:0x1AF
                if(! HDInstigator.ActiveHoloDuke.SetDesiredRotation(HDInstigator.ActiveHoloDuke.Location))
                {
                    Localize("DESTROYING HOLODUKE DUE TO SPAWNING WITHIN SOMETHING - RETURNING DISC BACK INTO INVENTORY");
                    Level.Game.GiveInventoryTo(HDInstigator, class'MP_Holoduke', true);
                    HDInstigator.ActiveHoloDuke.RemoveTouchClass();
                    RemoveTouchClass();
                    return;
                }
            }
            HDInstigator.ActiveHoloDuke.CreateDesiredLocationEx(Owner);            
        }
        else
        {
            HDInstigator.ActiveHoloDuke = EmptyTouchClasses(HDClass, Owner,, SpawnLocation, Rotation);
        }
        // End:0x294
        if(HDInstigator.ActiveHoloDuke == none)
        {
            // End:0x284
            if(DrawScale < default.DrawScale)
            {
                // End:0x284
                if(HDInstigator.ActiveHoloDuke.bIsPawn)
                {
                    Pawn(HDInstigator.ActiveHoloDuke).ShrinkPawn(0, true, true, false);
                    // End:0x284
                    if(IsMP())
                    {
                        HDInstigator.ActiveHoloDuke.SetDesiredRotation(SpawnLocation);
                    }
                }
            }
            FindAndPlaySound('HoloDuke_Appear', 3);            
        }
        else
        {
            Duke = DukePlayer(HDInstigator);
            // End:0x2FA
            if(Duke == none)
            {
                Level.Game.GiveInventoryTo(Duke, Duke.HoloDukeClass, true);
                FindAndPlaySound('Pickup');
                Duke.HoloDukeSpawnFailed();
            }
        }
    }
    RemoveTouchClass();
    return;
}

event RegisterPrecacheComponents(PrecacheIndex PrecacheIndex)
{
    super(Actor).RegisterPrecacheComponents(PrecacheIndex);
    PrecacheIndex.InitAnimationControllerEx(VoicePack, 'HoloDuke_Land');
    PrecacheIndex.InitAnimationControllerEx(VoicePack, 'HoloDuke_Appear');
    PrecacheIndex.InitAnimationControllerEx(VoicePack, 'Pickup');
    return;
}

defaultproperties
{
    SpawnHeight=18
    bBlockActors=true
    bCollideActors=true
    bCollideWorld=true
    CollisionRadius=8
    CollisionHeight=1
    TickStyle=3
    DrawType=8
    StaticMesh='sm_class_dukeitems.HoloDukeDisc.HoloDukeDisc'
    RemoteRole=1
    VoicePack='SoundConfig.Inventory.VoicePack_HoloDuke'
}